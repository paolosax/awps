/*--------------------------------------------------------------
# COMPONENTS/MOSAIC
https://codepen.io/brianhaferkamp/pen/KGjxmw
--------------------------------------------------------------*/
:root {
    --interval: 1000ms;
}

$global-mosaic-cols: 8;
$global-mosaic-rows: 8;

$mosaic-gap: (0: 0,
    1: 1px,
    5: $global-margin/2,
    10: $global-margin,
    15: $global-margin*1.5,
    20: $global-margin*2,
    25: $global-margin*2.5,
    30: $global-margin*3,
    35: $global-margin*3.5,
    40: $global-margin*4,
    45: $global-margin*4.5,
    50: $global-margin*5,
);
$mosaic-height: (30vh: 30vh,
    35vh: 35vh,
    40vh: 40vh,
    45vh: 45vh,
    50vh: 50vh,
    55vh: 55vh,
    60vh: 60vh,
    65vh: 65vh,
    70vh: 70vh,
    75vh: 75vh,
    80vh: 80vh,
    85vh: 85vh,
    90vh: 90vh,
    95vh: 95vh,
    100vh: 100vh,
);

$mosaic-cols: (1-col: 1fr,
    2-col: repeat(2, 1fr),
    3-col: repeat(3, 1fr),
    4-col: repeat(4, 1fr),
    5-col: repeat(5, 1fr),
    6-col: repeat(6, 1fr),
    7-col: repeat(7, 1fr),
    8-col: repeat(8, 1fr),
);


.mosaic {
    display: grid;
    grid-template-columns: 1fr;
    grid-auto-rows: minmax(100px, calc(100vh/2));
    grid-auto-flow: dense;
    gap: $global-margin;
    // min-height: 50vh;

    @include breakpoint(medium) {
        grid-template-columns: repeat(2, 1fr);
    }

    @include breakpoint(large) {
        grid-template-columns: repeat(8, 1fr);
        grid-auto-rows: calc(100vh/#{$global-mosaic-rows});
        // grid-template-rows: repeat(3, 300px);
        // grid-template-rows: auto;
    }

    @each $slug,
    $value in $mosaic-cols {
        &__template--#{$slug} {
            @include breakpoint(large) {
                grid-template-columns: #{$value};
            }
        }
    }

    @each $slug,
    $value in $mosaic-gap {
        &__gap--#{$slug} {
            gap: #{$value}
        }
    }

    @each $slug,
    $value in $mosaic-height {
        &__height--#{$slug} {
            min-height: #{$value};
        }
    }

    &__item {
        @include flexbox();
        @include align-items(flex-end);
        @include justify-content(center);
        @include flex-wrap(wrap);
        @include transition(all .4s ease);
        position: relative;
        overflow: hidden;
        // min-height: calc(100vh/4);

        @include breakpoint(large) {
            min-height: unset;
        }

        &::after {
            content: "";
            position: absolute;
            top: 0;
            right: 0;
            bottom: 0;
            left: 0;
            // width: 100%;
            // height: 100%;
            background-color: rgba($black, .0);
            z-index: 1;
            @include transition(all .4s ease);
        }

        a {
            position: absolute;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            z-index: 10;

            &:hover,
            &:focus {
                ~.mosaic__item-content {
                    .mosaic__item-content-title {
                        color: $primary-color;
                    }
                }

                ~.mosaic__item-image {
                    &::after {
                        content: "";
                        position: absolute;
                        top: 0;
                        right: 0;
                        bottom: 0;
                        left: 0;
                        // width: 100%;
                        // height: 100%;
                        background-color: rgba($black, .5);
                        z-index: 1;
                    }
                }
            }
        }

        &.has-list {
            a {
                @include breakpoint(large) {

                    &:hover,
                    &:focus {
                        ~.mosaic__item-content {
                            transform: translate3d(0, 0, 0);
                        }
                    }
                }
            }
        }



        /* &:hover,
&:focus {
    // @include align-items(center);

    &::after {
        background: rgba($black, .4);
    }

    img {
        @include scale(1.1);
    }

    .mosaic__item-content {
        background-color: rgba($black, 0);
        // border-top: 1px solid rgba($white, .25);
        // transform: translateY(-100%);
        // transition: transform var(--interval) ease;
        // transition-delay: .800s;

        &-title {
            color: $primary-color;
        }
    }

} */

        &--featured {
            grid-column: span 2;
            grid-row: span 2;
        }

        &--wide {
            grid-column: span 2;
            grid-row: span 1;
        }

        &--tall {
            grid-column: span 1;
            grid-row: span 2;
        }

        @for $i from 1 through $global-mosaic-cols {
            @for $x from 1 through $global-mosaic-rows {
                &--#{$i}x#{$x} {
                    grid-column: span 1;
                    grid-row: span 1;

                    @include breakpoint(large) {
                        grid-column: span #{$i};
                        grid-row: span #{$x};
                    }
                }
            }
        }



        >img {
            width: 100%;
            height: 100%;
            object-fit: cover;
            object-position: center;
            @include scale(1);
            @include transition(all .5s ease-in-out);
        }

        &-image {
            width: 100%;
            height: 100%;
            @include transition(all .4s ease);

            >img {
                width: 100%;
                height: 100%;
                object-fit: cover;
                object-position: center;
            }
        }

        &-content {
            // @include flex(0, 0, 100%);
            @include flexbox();
            @include flex-direction(column);
            @include align-items(center);
            @include justify-content(flex-start);
            // @include border-radius(.2rem);
            @include transition(all .4s ease);
            width: 100%;
            height: 100%;
            position: absolute;
            top: 0;
            z-index: 2;
            padding: $global-padding*2;
            // background-color: rgba($black, 0);
            background: rgba($black, .4);
            transform: translate3d(0, calc(100% - 6.5rem), 0);

            &-title {
                margin-bottom: $global-margin*2;
                color: $white;
                text-shadow: 1px 1px 0px $black;
                font-size: 1.6rem;

                @include breakpoint(large) {
                    font-size: 2rem;
                }
            }

            &-index {
                display: none;
                color: $white;
                font-size: 2rem;

                @include breakpoint(large) {
                    display: block;
                }

                li {
                    margin-bottom: $global-margin/2;
                }
            }
        }
    }
}